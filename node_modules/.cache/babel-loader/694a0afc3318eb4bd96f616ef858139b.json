{"ast":null,"code":"var _jsxFileName = \"/home/kimaro/Documents/react-portfolio-app/src/components/portfolio/Projects.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { projectsData } from './Data';\nimport { projectsNav } from './Data';\nimport PortfolioItems from './PortfolioItems';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [item, setItem] = useState({\n    name: 'all'\n  });\n  const [projects, setProjects] = useState([]);\n  const [active, setActive] = useState(0);\n  useEffect(() => {\n    if (item.name === 'all') {\n      setProjects(projectsData);\n    } else {\n      const newProjects = projectsData.filter(project => {\n        return project.category.toLowerCase() === item.name;\n      });\n      setProjects(newProjects);\n    }\n  }, [item]);\n  const handleClick = (e, index) => {\n    setItem({\n      name: e.target.textContent.toLowerCase()\n    });\n    setActive(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work_filters\",\n      children: projectsNav.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: e => {\n            handleClick(e, index);\n          },\n          className: `${active === index ? 'active-work' : ''} work_item`,\n          children: item.name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"work_container container grid\",\n      children: projects.map(item => {\n        return /*#__PURE__*/_jsxDEV(PortfolioItems, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Projects, \"b2lwtOXtOdkVCpzpS1QcGJopY6g=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","projectsData","projectsNav","PortfolioItems","Projects","item","setItem","name","projects","setProjects","active","setActive","newProjects","filter","project","category","toLowerCase","handleClick","e","index","target","textContent","map","id"],"sources":["/home/kimaro/Documents/react-portfolio-app/src/components/portfolio/Projects.jsx"],"sourcesContent":["import React from 'react';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { projectsData } from './Data';\nimport { projectsNav } from './Data';\nimport PortfolioItems from './PortfolioItems';\n\nconst Projects = () => {\n    const [item, setItem] = useState({ name: 'all' });\n    const [projects, setProjects] = useState([]);\n    const [active, setActive] = useState(0);\n\n    useEffect(() => {\n        if(item.name === 'all') {\n            setProjects(projectsData);\n        }\n        else {\n            const newProjects = projectsData.filter((project) => {\n                return project.category.toLowerCase() === item.name;\n            });\n            setProjects(newProjects);\n        }\n    }, [item]);\n\n    const handleClick = (e, index) => {\n        setItem({ name: e.target.textContent.toLowerCase() });\n        setActive(index);\n    };\n\n  return (\n    <div>\n        <div className=\"work_filters\">\n            {projectsNav.map((item, index) => {\n                return (\n                    <span onClick={(e) => {\n                        handleClick(e, index);\n                    }}\n                    className={`${active === index ? 'active-work' : ''} work_item`}\n                    key={index}\n                    >\n                    {item.name}\n                    </span>\n                );\n            })}\n        </div>\n\n        <div className=\"work_container container grid\">\n            {projects.map((item) => {\n                return (\n                    <PortfolioItems item={item} key={item.id} />\n                )\n            })}\n        </div>\n    </div>\n  );\n};\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,YAAY,QAAQ,QAAQ;AACrC,SAASC,WAAW,QAAQ,QAAQ;AACpC,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC;IAAEO,IAAI,EAAE;EAAM,CAAC,CAAC;EACjD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACZ,IAAGM,IAAI,CAACE,IAAI,KAAK,KAAK,EAAE;MACpBE,WAAW,CAACR,YAAY,CAAC;IAC7B,CAAC,MACI;MACD,MAAMW,WAAW,GAAGX,YAAY,CAACY,MAAM,CAAEC,OAAO,IAAK;QACjD,OAAOA,OAAO,CAACC,QAAQ,CAACC,WAAW,EAAE,KAAKX,IAAI,CAACE,IAAI;MACvD,CAAC,CAAC;MACFE,WAAW,CAACG,WAAW,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,MAAMY,WAAW,GAAG,CAACC,CAAC,EAAEC,KAAK,KAAK;IAC9Bb,OAAO,CAAC;MAAEC,IAAI,EAAEW,CAAC,CAACE,MAAM,CAACC,WAAW,CAACL,WAAW;IAAG,CAAC,CAAC;IACrDL,SAAS,CAACQ,KAAK,CAAC;EACpB,CAAC;EAEH,oBACE;IAAA,wBACI;MAAK,SAAS,EAAC,cAAc;MAAA,UACxBjB,WAAW,CAACoB,GAAG,CAAC,CAACjB,IAAI,EAAEc,KAAK,KAAK;QAC9B,oBACI;UAAM,OAAO,EAAGD,CAAC,IAAK;YAClBD,WAAW,CAACC,CAAC,EAAEC,KAAK,CAAC;UACzB,CAAE;UACF,SAAS,EAAG,GAAET,MAAM,KAAKS,KAAK,GAAG,aAAa,GAAG,EAAG,YAAY;UAAA,UAG/Dd,IAAI,CAACE;QAAI,GAFLY,KAAK;UAAA;UAAA;UAAA;QAAA,QAGH;MAEf,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,eAEN;MAAK,SAAS,EAAC,+BAA+B;MAAA,UACzCX,QAAQ,CAACc,GAAG,CAAEjB,IAAI,IAAK;QACpB,oBACI,QAAC,cAAc;UAAC,IAAI,EAAEA;QAAK,GAAMA,IAAI,CAACkB,EAAE;UAAA;UAAA;UAAA;QAAA,QAAI;MAEpD,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV,CAAC;AAAC,GAhDInB,QAAQ;AAAA,KAARA,QAAQ;AAkDd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}